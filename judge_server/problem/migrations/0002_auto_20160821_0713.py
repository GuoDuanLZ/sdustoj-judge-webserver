# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-21 07:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('judge', '0002_machine'),
        ('problem', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('creator', models.CharField(max_length=30)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updater', models.CharField(max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=128)),
                ('introduction', models.CharField(max_length=512, null=True)),
                ('source', models.CharField(max_length=256, null=True)),
                ('author', models.CharField(max_length=32, null=True)),
                ('status', models.IntegerField(choices=[(1, 'available'), (0, 'unavailable')])),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number_node', models.IntegerField(default=0)),
                ('number_problem', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Limit',
            fields=[
                ('creator', models.CharField(max_length=30)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updater', models.CharField(max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=128)),
                ('introduction', models.CharField(max_length=512, null=True)),
                ('status', models.IntegerField(choices=[(1, 'available'), (0, 'unavailable')])),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('time_limit', models.IntegerField(default=-1)),
                ('memory_limit', models.IntegerField(default=-1)),
                ('length_limit', models.IntegerField(default=-1)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='limit', to='judge.Environment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('creator', models.CharField(max_length=30)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updater', models.CharField(max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=128)),
                ('introduction', models.CharField(max_length=512, null=True)),
                ('status', models.IntegerField(choices=[(1, 'available'), (0, 'unavailable')])),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number_node', models.IntegerField(default=0)),
                ('number_problem', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node', to='problem.Category')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='problem.Node')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('creator', models.CharField(max_length=30)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updater', models.CharField(max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=128)),
                ('introduction', models.CharField(max_length=512, null=True)),
                ('source', models.CharField(max_length=256, null=True)),
                ('author', models.CharField(max_length=32, null=True)),
                ('status', models.IntegerField(choices=[(1, 'available'), (0, 'unavailable')])),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('test_type', models.CharField(choices=[('normal', 'normal'), ('ignBlank', 'ignore blank'), ('ignPunct', 'ignore punctuation')], default='normal', max_length=8)),
                ('number_test_data', models.IntegerField(default=0)),
                ('number_decorator', models.IntegerField(default=0)),
                ('number_limit', models.IntegerField(default=0)),
                ('number_category', models.IntegerField(default=0)),
                ('number_node', models.IntegerField(default=0)),
                ('description', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='problem', to='problem.Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemCategoryNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creator', models.CharField(max_length=30)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updater', models.CharField(max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_relation', to='problem.Category')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_relation', to='problem.Node')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_relation', to='problem.Problem')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProblemTestData',
            fields=[
                ('creator', models.CharField(max_length=30)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('updater', models.CharField(max_length=30)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_data_relation', to='problem.Problem')),
                ('test_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_relation', to='problem.TestData')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='metaproblem',
            name='number_virtual_judge',
        ),
        migrations.AddField(
            model_name='problem',
            name='meta_problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem', to='problem.MetaProblem'),
        ),
        migrations.AddField(
            model_name='problem',
            name='sample',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='problem', to='problem.Sample'),
        ),
        migrations.AddField(
            model_name='problem',
            name='test_data',
            field=models.ManyToManyField(related_name='problem', through='problem.ProblemTestData', to='problem.TestData'),
        ),
        migrations.AddField(
            model_name='node',
            name='problem',
            field=models.ManyToManyField(related_name='node', through='problem.ProblemCategoryNode', to='problem.Problem'),
        ),
        migrations.AddField(
            model_name='limit',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='limit', to='problem.Problem'),
        ),
        migrations.AddField(
            model_name='category',
            name='problem',
            field=models.ManyToManyField(related_name='category', through='problem.ProblemCategoryNode', to='problem.Problem'),
        ),
    ]
